version: '3.8'
services:

  traefik:
      networks:
          - web-public
      ports:
        - "80:80"
        - "443:443"
      deploy:
        update_config:
          parallelism: 1
          delay: 5s
          order: stop-first
        placement:
          constraints:
            # Make the traefik service run only on the node with this label
            # as the node with it has the volume for the certificates
            - node.role==manager
      volumes:
        # Add Docker as a mounted volume, so that Traefik can read the labels of other services
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - certificates:/certificates
      configs:
        - source: traefik
          target: /etc/traefik/traefik.yml

  mariadb:
    networks:
      - web-public
    environment:
        MARIADB_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
        MARIADB_DATABASE: "${DB_NAME}"
        MARIADB_USER: "${DB_USERNAME}"
        MARIADB_PASSWORD: "${DB_PASSWORD}"
    deploy:
      placement:
        constraints:
          # Make the MySQL service run only on the node with this label
          # as the node with it has the volume for the database
          - node.role==manager
    volumes:
      - database_data:/var/lib/mysql
      - database_custom_conf:/etc/mysql/conf.d
      - database_shared:/shared

  ssh:
    image: serversideup/docker-ssh
    ports:
      - target: 2222
        published: 2222
        mode: host
    environment:
      # Change the keys below to your own keys (see https://github.com/serversideup/docker-ssh)
      AUTHORIZED_KEYS: >
        "# Start Keys
         ssh-ed25519 1234567890abcdefghijklmnoqrstuvwxyz user-a
         ssh-ed25519 abcdefghijklmnoqrstuvwxyz1234567890 user-b
         # End Keys"
      # Be sure to configure the allowed IP addresses too (see https://github.com/serversideup/docker-ssh)
      ALLOWED_IPS: "AllowUsers *@127.0.0.1"
    volumes:
      - tunnel_ssh_host_keys:/etc/ssh/ssh_host_keys
    networks:
        - web-public

  php:
    image: example.com/myrepo/my-laravel-app:latest
    networks:
      - web-public
    volumes:
      - "storage_private:/var/www/html/storage/app/private/"
      - "storage_public:/var/www/html/storage/app/public/"
      - "storage_sessions:/var/www/html/storage/framework/sessions"
      - "storage_logs:/var/www/html/storage/logs"
    environment:
      PHP_POOL_NAME: "my-laravel-app"
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.my-laravel-app.rule=${TRAEFIK_HOST_RULE}"
        - "traefik.http.routers.my-laravel-app.entrypoints=websecure"
        - "traefik.http.routers.my-laravel-app.tls=true"
        - "traefik.http.routers.my-laravel-app.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.my-laravel-app.loadbalancer.server.port=443"
        - "traefik.http.services.my-laravel-app.loadbalancer.server.scheme=https"
        # Health check
        - "traefik.http.services.my-laravel-app.loadbalancer.healthcheck.path=/ping"
        - "traefik.http.services.my-laravel-app.loadbalancer.healthcheck.interval=100ms"
        - "traefik.http.services.my-laravel-app.loadbalancer.healthcheck.timeout=75ms"
        - "traefik.http.services.my-laravel-app.loadbalancer.healthcheck.scheme=https"

configs:
  traefik:
    name: "traefik.yml"
    file: ./.infrastructure/conf/traefik/prod/traefik.yml

volumes:
  certificates:
  database_data:
  database_custom_conf:
  database_shared:
  storage_private:
  storage_public:
  storage_sessions:
  storage_logs:
  tunnel_ssh_host_keys:

networks:
  web-public:
